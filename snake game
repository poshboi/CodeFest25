import tkinter
import random  

ROWS = 25
COLS = 25
TILE_SIZE = 25

WINDOW_WIDTH = TILE_SIZE * COLS  # 25*25 = 625
WINDOW_HEIGHT = TILE_SIZE * ROWS  # 25*25 = 625

class Tile:
    def __init__(self, x, y):
        self.x = x
        self.y = y

window = tkinter.Tk()
window.title("Snake")
window.resizable(False, False)

canvas = tkinter.Canvas(window, bg="black", width=WINDOW_WIDTH, height=WINDOW_HEIGHT, borderwidth=0, highlightthickness=0)
canvas.pack()
window.update()


window_width = window.winfo_width()
window_height = window.winfo_height()
screen_width = window.winfo_screenwidth()
screen_height = window.winfo_screenheight()

window_x = int((screen_width / 2) - (window_width / 2))
window_y = int((screen_height / 2) - (window_height / 2))

window.geometry(f"{window_width}x{window_height}+{window_x}+{window_y}")

snake = Tile(TILE_SIZE * 5, TILE_SIZE * 5)
food = Tile(TILE_SIZE * 10, TILE_SIZE * 10)
velocityX = 0
velocityY = 0
snake_body = [snake]  # Start with the head of the snake
game_over = False
score = 0

def change_direction(e):
    global velocityX, velocityY, game_over
    if game_over:
        return
   
    if e.keysym == "Up" and velocityY != 1:
        velocityX = 0
        velocityY = -1
    elif e.keysym == "Down" and velocityY != -1:
        velocityX = 0
        velocityY = 1
    elif e.keysym == "Left" and velocityX != 1:
        velocityX = -1
        velocityY = 0
    elif e.keysym == "Right" and velocityX != -1:
        velocityX = 1
        velocityY = 0

def move():
    global snake, food, snake_body, game_over, score
    if game_over:
        return
   
    if snake.x < 0 or snake.x >= WINDOW_WIDTH or snake.y < 0 or snake.y >= WINDOW_HEIGHT:
        game_over = True
        return
   
    for tile in snake_body[1:]:
        if snake.x == tile.x and snake.y == tile.y:
            game_over = True
            return
   
    if snake.x == food.x and snake.y == food.y:
        snake_body.append(Tile(snake_body[-1].x, snake_body[-1].y))  # Add new segment at the end
        food.x = random.randint(0, COLS-1) * TILE_SIZE
        food.y = random.randint(0, ROWS-1) * TILE_SIZE
        score += 1

 
    for i in range(len(snake_body) - 1, 0, -1):
        snake_body[i].x = snake_body[i-1].x
        snake_body[i].y = snake_body[i-1].y

   
    snake.x += velocityX * TILE_SIZE
    snake.y += velocityY * TILE_SIZE

    snake_body[0].x = snake.x
    snake_body[0].y = snake.y

def draw():
    global snake, food, snake_body, game_over, score
    move()

    canvas.delete("all")

  
    canvas.create_oval(food.x + 5, food.y + 5, food.x + TILE_SIZE - 5, food.y + TILE_SIZE - 5, fill='red', outline='red')

    for i in range(1, len(snake_body)):
        canvas.create_line(snake_body[i-1].x + TILE_SIZE // 2, snake_body[i-1].y + TILE_SIZE // 2,
                           snake_body[i].x + TILE_SIZE // 2, snake_body[i].y + TILE_SIZE // 2,
                           fill="lime green", width=TILE_SIZE // 2)


    canvas.create_oval(snake.x + 5, snake.y + 5, snake.x + TILE_SIZE - 5, snake.y + TILE_SIZE - 5, fill='lime green', outline='black')


    if game_over:
        canvas.create_text(WINDOW_WIDTH / 2, WINDOW_HEIGHT / 2, font="Arial 20", text=f"Game Over: {score}", fill="white")
    else:
        canvas.create_text(30, 20, font="Arial 10", text=f"Score: {score}", fill="white")
   
    window.after(80, draw)

draw()

window.bind("<KeyRelease>", change_direction)

window.mainloop()


